generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(uuid())
  email              String   @unique
  password           String
  name               String
  surname            String
  profilePicture     String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  country            String?
  alternativeEmail   String?
  currencyPreference String?
  languagePreference String?
  twoFactorEnabled   Boolean  @default(false)
  twoFactorSecret    String?

  account             Account?
  expenses            Expense[]
  UserExpenseCategory UserExpenseCategory[]
}

model Account {
  id               String @id @default(uuid())
  userId           String @unique
  balance          Float
  savings          Float
  emergencySavings Float

  user User @relation(fields: [userId], references: [id])

  @@unique([id, userId])
}

model ExpenseCategory {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  essential   Boolean  @default(false)
  budgetCap   Decimal?
  recurring   Boolean  @default(false)
  colorCode   String?

  expenses            Expense[]
  UserExpenseCategory UserExpenseCategory[]
}

model UserExpenseCategory {
  userId            String
  expenseCategoryId String

  user            User            @relation(fields: [userId], references: [id])
  expenseCategory ExpenseCategory @relation(fields: [expenseCategoryId], references: [id])

  @@id([userId, expenseCategoryId])
}

model Expense {
  id          String   @id @default(uuid())
  userId      String
  amount      Float
  description String
  categoryId  String
  currency    String? // Currency of the expense (nullable)
  location    String? // Location where the expense occurred (nullable)
  receipt     String? // Receipt details (e.g., URL or file path) (nullable)
  date        DateTime // Date of the expense
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User            @relation(fields: [userId], references: [id])
  category ExpenseCategory @relation(fields: [categoryId], references: [id])
}

model Currency {
  id     Int     @id @default(autoincrement())
  code   String
  name   String
  symbol String?
  active Boolean @default(true)

  countries Country[]
}

model Country {
  id   Int    @id @default(autoincrement())
  code String @unique
  name String @unique

  currencies Currency[]

  @@unique([code, name])
}
